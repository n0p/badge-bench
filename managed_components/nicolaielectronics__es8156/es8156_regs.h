// SPDX-FileCopyrightText: 2025 Nicolai Electronics
// SPDX-License-Identifier: MIT

#pragma once

// Registers (page 0)
#define ES8156_REG_RESET_CONTROL          0x00
#define ES8156_REG_MAIN_CLOCK_CONTROL     0x01
#define ES8156_REG_MODE_CONFIG_1          0x02
#define ES8156_REG_MASTER_LRCK_DIVIDER_1  0x03
#define ES8156_REG_MASTER_LRCK_DIVIDER_0  0x04
#define ES8156_REG_MASTER_CLOCK_CONTROL   0x05
#define ES8156_REG_NFS_CONFIG             0x06
#define ES8156_REG_MISC_CONTROL_1         0x07
#define ES8156_REG_CLOCK_OFF              0x08
#define ES8156_REG_MISC_CONTROL_2         0x09
#define ES8156_REG_TIME_CONTROL_1         0x0A
#define ES8156_REG_TIME_CONTROL_2         0x0B
#define ES8156_REG_CHIP_STATUS            0x0C
#define ES8156_REG_P2S_CONTROL            0x0D
#define ES8156_REG_DAC_COUNTER_PARAMETER  0x10
#define ES8156_REG_SDP_INTERFACE_CONFIG_1 0x11
#define ES8156_REG_AUTOMUTE_CONTROL       0x12
#define ES8156_REG_MUTE_CONTROL           0x13
#define ES8156_REG_VOLUME_CONTROL         0x14
#define ES8156_REG_ALC_CONFIG_1           0x15
#define ES8156_REG_ALC_CONFIG_2           0x16
#define ES8156_REG_ALC_LEVEL              0x17
#define ES8156_REG_MISC_CONTROL_3         0x18
#define ES8156_REG_EQ_CONTROL_1           0x19
#define ES8156_REG_EQ_CONFIG_2            0x1A
#define ES8156_REG_ANALOG_SYSTEM_1        0x20
#define ES8156_REG_ANALOG_SYSTEM_2        0x21
#define ES8156_REG_ANALOG_SYSTEM_3        0x22
#define ES8156_REG_ANALOG_SYSTEM_4        0x23
#define ES8156_REG_ANALOG_SYSTEM_5        0x24
#define ES8156_REG_ANALOG_SYSTEM_6        0x25
#define ES8156_REG_EQ_DATA_RAM_CLEAR      0x40  // 0x40 to 0x5E
#define ES8156_REG_PAGE_SELECT            0xFC
#define ES8156_REG_CHIP_ID1               0xFD
#define ES8156_REG_CHIP_ID0               0xFE
#define ES8156_REG_CHIP_VERSION           0xFF

// Registers (page 1)
#define ES8156_REG_EQ_COEFFICIENT_FIRST 0x00
#define ES8156_REG_EQ_COEFFICIENT_LAST  0xD1

// Lengths
#define ES8156_EQ_DATA_RAM_LENGTH 0x1E

// Register 0x00 - Reset control
#define ES8156_REG00_CSM_ON_OFFSET      (0)
#define ES8156_REG00_CSM_ON_MASK        (1 << ES8156_REG00_CSM_ON_OFFSET)
#define ES8156_REG00_SEQ_DIS_OFFSET     (1)
#define ES8156_REG00_SEQ_DIS_MASK       (1 << ES8156_REG00_SEQ_DIS_OFFSET)
#define ES8156_REG00_RST_DIG_OFFSET     (2)
#define ES8156_REG00_RST_DIG_MASK       (1 << ES8156_REG00_RST_DIG_OFFSET)
#define ES8156_REG00_RST_DAC_DIG_OFFSET (3)
#define ES8156_REG00_RST_DAC_DIG_MASK   (1 << ES8156_REG00_RST_DAC_DIG_OFFSET)
#define ES8156_REG00_RST_MSTGEN_OFFSET  (4)
#define ES8156_REG00_RST_MSTGEN_MASK    (1 << ES8156_REG00_RST_MSTGEN_OFFSET)
#define ES8156_REG00_RST_REGS_OFFSET    (5)
#define ES8156_REG00_RST_REGS_MASK      (1 << ES8156_REG00_RST_REGS_OFFSET)

// Register 0x01 - Main clock control
#define ES8156_REG01_CLK_DAC_DIV_OFFSET  (0)
#define ES8156_REG01_CLK_DAC_DIV_MASK    (0xF << ES8156_REG01_CLK_DAC_DIV_OFFSET)
#define ES8156_REG01_OSR128_SEL_OFFSET   (5)
#define ES8156_REG01_OSR128_SEL_MASK     (1 << ES8156_REG01_OSR128_SEL_OFFSET)
#define ES8156_REG01_MULTP_FACTOR_OFFSET (6)
#define ES8156_REG01_MULTP_FACTOR_MASK   (0x3 << ES8156_REG01_MULTP_FACTOR_OFFSET)

// Register 0x02 - Mode config 1
#define ES8156_REG02_MS_MODE_OFFSET       (0)
#define ES8156_REG02_MS_MODE_MASK         (1 << ES8156_REG02_MS_MODE_OFFSET)
#define ES8156_REG02_SPEED_MODE_OFFSET    (1)
#define ES8156_REG02_SPEED_MODE_MASK      (1 << ES8156_REG02_SPEED_MODE_OFFSET)
#define ES8156_REG02_SOFT_MODE_SEL_OFFSET (2)
#define ES8156_REG02_SOFT_MODE_SEL_MASK   (1 << ES8156_REG02_SOFT_MODE_SEL_OFFSET)
#define ES8156_REG02_EQ_HIGH_MODE_OFFSET  (3)
#define ES8156_REG02_EQ_HIGH_MODE_MASK    (1 << ES8156_REG02_EQ_HIGH_MODE_OFFSET)
#define ES8156_REG02_SCLK_INV_MODE_OFFSET (4)
#define ES8156_REG02_SCLK_INV_MODE_MASK   (1 << ES8156_REG02_SCLK_INV_MODE_OFFSET)
#define ES8156_REG02_SCLKLRCK_TRI_OFFSET  (5)
#define ES8156_REG02_SCLKLRCK_TRI_MASK    (1 << ES8156_REG02_SCLKLRCK_TRI_OFFSET)
#define ES8156_REG02_ISCLKLRCK_SEL_OFFSET (6)
#define ES8156_REG02_ISCLKLRCK_SEL_MASK   (1 << ES8156_REG02_ISCLKLRCK_SEL_OFFSET)
#define ES8156_REG02_MCLK_SEL_OFFSET      (7)
#define ES8156_REG02_MCLK_SEL_MASK        (1 << ES8156_REG02_MCLK_SEL_OFFSET)

// Register 0x03 - Master LRCK divider 1
#define ES8156_REG03_M_LRCK_DIV_HIGH4_OFFSET (0)
#define ES8156_REG03_M_LRCK_DIV_HIGH4_MASK   (0xF << ES8156_REG03_M_LRCK_DIV_HIGH4_OFFSET)

// Register 0x04 - Master LRCK divider 0
#define ES8156_REG04_M_LRCK_DIV_LOW8_OFFSET (0)
#define ES8156_REG04_M_LRCK_DIV_LOW8_MASK   (0xFF << ES8156_REG04_M_LRCK_DIV_LOW8_OFFSET)

// Register 0x05 - Master clock control
#define ES8156_REG05_M_SCLK_DIV_OFFSET  (0)
#define ES8156_REG05_M_SCLK_DIV_MASK    (0x7F << ES8156_REG05_M_SCLK_DIV_OFFSET)
#define ES8156_REG05_M_SCLK_MODE_OFFSET (7)
#define ES8156_REG05_M_SCLK_MODE_MASK   (1 << ES8156_REG05_M_SCLK_MODE_OFFSET)

// Register 0x06 - NFS config
#define ES8156_REG06_LRCK_RATE_MODE_OFFSET (0)
#define ES8156_REG06_LRCK_RATE_MODE_MASK   (0xF << ES8156_REG06_LRCK_RATE_MODE_OFFSET)
#define ES8156_REG06_LRCK_CNT_RV_OFFSET    (4)
#define ES8156_REG06_LRCK_CNT_RV_MASK      (0xF << ES8156_REG06_LRCK_CNT_RV_OFFSET)

// Register 0x07 - Misc control 1
#define ES8156_REG07_LRCK_EXTEND_OFFSET     (0)
#define ES8156_REG07_LRCK_EXTEND_MASK       (1 << ES8156_REG07_LRCK_EXTEND_OFFSET)
#define ES8156_REG07_CLKDBL_PATH_SEL_OFFSET (1)
#define ES8156_REG07_CLKDBL_PATH_SEL_MASK   (1 << ES8156_REG07_CLKDBL_PATH_SEL_OFFSET)
#define ES8156_REG07_CLKDBL_PW_SEL_OFFSET   (2)
#define ES8156_REG07_CLKDBL_PW_SEL_MASK     (3 << ES8156_REG07_CLKDBL_PW_SEL_OFFSET)
#define ES8156_REG07_CLK_DAC_DIV0_OFFSET    (4)
#define ES8156_REG07_CLK_DAC_DIV0_MASK      (3 << ES8156_REG07_CLK_DAC_DIV0_OFFSET)
#define ES8156_REG07_MCLK_INV_OFFSET        (7)
#define ES8156_REG07_MCLK_INV_MASK          (1 << ES8156_REG07_MCLK_INV_OFFSET)

// Register 0x08 - Clock off
#define ES8156_REG08_MCLK_ON_OFFSET         (0)
#define ES8156_REG08_MCLK_ON_MASK           (1 << ES8156_REG08_MCLK_ON_OFFSET)
#define ES8156_REG08_DAC_MCLK_ON_OFFSET     (1)
#define ES8156_REG08_DAC_MCLK_ON_MASK       (1 << ES8156_REG08_DAC_MCLK_ON_OFFSET)
#define ES8156_REG08_ANA_CLK_ON_OFFSET      (2)
#define ES8156_REG08_ANA_CLK_ON_MASK        (1 << ES8156_REG08_ANA_CLK_ON_OFFSET)
#define ES8156_REG08_EXT_SCLKLRCK_ON_OFFSET (3)
#define ES8156_REG08_EXT_SCLKLRCK_ON_MASK   (1 << ES8156_REG08_EXT_SCLKLRCK_ON_OFFSET)
#define ES8156_REG08_MASTER_CLK_ON_OFFSET   (4)
#define ES8156_REG08_MASTER_CLK_ON_MASK     (1 << ES8156_REG08_MASTER_CLK_ON_OFFSET)
#define ES8156_REG08_P2S_CLK_ON_OFFSET      (5)
#define ES8156_REG08_P2S_CLK_ON_MASK        (1 << ES8156_REG08_P2S_CLK_ON_OFFSET)

// Register 0x09 - Misc control 2
#define ES8156_REG09_PUPDN_OFF_OFFSET     (0)
#define ES8156_REG09_PUPDN_OFF_MASK       (1 << ES8156_REG09_PUPDN_OFF_OFFSET)
#define ES8156_REG09_DLL_ON_OFFSET        (1)
#define ES8156_REG09_DLL_ON_MASK          (1 << ES8156_REG09_DLL_ON_OFFSET)
#define ES8156_REG09_CSM_CNTSEL_OFFSET    (4)
#define ES8156_REG09_CSM_CNTSEL_MASK      (1 << ES8156_REG09_CSM_CNTSEL_OFFSET)
#define ES8156_REG09_MSTCLK_SRCSEL_OFFSET (5)
#define ES8156_REG09_MSTCLK_SRCSEL_MASK   (1 << ES8156_REG09_MSTCLK_SRCSEL_OFFSET)

// Register 0x0A - Time control 1
#define ES8156_REG0A_V_T1_OFFSET (0)
#define ES8156_REG0A_V_T1_MASK   (0xFF << ES8156_REG0A_V_T1_OFFSET)

// Register 0x0B - Time control 2
#define ES8156_REG0B_V_T2_OFFSET (0)
#define ES8156_REG0B_V_T2_MASK   (0xFF << ES8156_REG0B_V_T2_OFFSET)

// Register 0x0C - Chip status
#define ES8156_REG0C_FORCE_CSM_OFFSET (0)
#define ES8156_REG0C_FORCE_CSM_MASK   (3 << ES8156_REG0C_FORCE_CSM_OFFSET)
#define ES8156_REG0C_CSM_STATE_OFFSET (4)
#define ES8156_REG0C_CSM_STATE_MASK   (3 << ES8156_REG0C_CSM_STATE_OFFSET)

// Register 0x0D - P2S control
#define ES8156_REG0D_P2S_SDOUT_TRI_OFFSET   (0)
#define ES8156_REG0D_P2S_SDOUT_TRI_MASK     (1 << ES8156_REG0D_P2S_SDOUT_TRI_OFFSET)
#define ES8156_REG0D_P2S_SDOUT_SEL_OFFSET   (1)
#define ES8156_REG0D_P2S_SDOUT_SEL_MASK     (1 << ES8156_REG0D_P2S_SDOUT_SEL_OFFSET)
#define ES8156_REG0D_P2S_SDOUT_MUTEB_OFFSET (2)
#define ES8156_REG0D_P2S_SDOUT_MUTEB_MASK   (1 << ES8156_REG0D_P2S_SDOUT_MUTEB_OFFSET)
#define ES8156_REG0D_P2S_NFS_FLAGOFF_OFFSET (3)
#define ES8156_REG0D_P2S_NFS_FLAGOFF_MASK   (1 << ES8156_REG0D_P2S_NFS_FLAGOFF_OFFSET)
#define ES8156_REG0D_LRCK_1STCNT_OFFSET     (4)
#define ES8156_REG0D_LRCK_1STCNT_MASK       (0xF << ES8156_REG0D_LRCK_1STCNT_OFFSET)

// Register 0x10 - DAC counter parameter
#define ES8156_REG10_DAC_NS_OFFSET (0)
#define ES8156_REG10_DAC_NS_MASK   (0x7F << ES8156_REG10_DAC_NS_OFFSET)

// Register 0x11 - SDP interface config 1
#define ES8156_REG11_SP_PROTOCAL_OFFSET (0)
#define ES8156_REG11_SP_PROTOCAL_MASK   (3 << ES8156_REG11_SP_PROTOCAL_OFFSET)
#define ES8156_REG11_SP_LRP_OFFSET      (2)
#define ES8156_REG11_SP_LRP_MASK        (1 << ES8156_REG11_SP_LRP_OFFSET)
#define ES8156_REG11_SP_MUTE_OFFSET     (3)
#define ES8156_REG11_SP_MUTE_MASK       (1 << ES8156_REG11_SP_MUTE_OFFSET)
#define ES8156_REG11_SP_WL_OFFSET       (4)
#define ES8156_REG11_SP_WL_MASK         (7 << ES8156_REG11_SP_WL_OFFSET)

// Register 0x12 - Automute control
#define ES8156_REG12_AUTOMUTE_SIZE_OFFSET (0)
#define ES8156_REG12_AUTOMUTE_SIZE_MASK   (0xF << ES8156_REG12_AUTOMUTE_SIZE_OFFSET)
#define ES8156_REG12_AUTOMUTE_NG_OFFSET   (4)
#define ES8156_REG12_AUTOMUTE_NG_MASK     (0xF << ES8156_REG12_AUTOMUTE_NG_OFFSET)

// Register 0x13 - Mute control
#define ES8156_REG13_AM_ENA_OFFSET         (0)
#define ES8156_REG13_AM_ENA_MASK_MASK      (1 << ES8156_REG13_AM_ENA_OFFSET)
#define ES8156_REG13_LCH_DSM_SMUTE_OFFSET  (1)
#define ES8156_REG13_LCH_DSM_SMUTE_MASK    (1 << ES8156_REG13_LCH_DSM_SMUTE_OFFSET)
#define ES8156_REG13_RCH_DSM_SMUTE_OFFSET  (2)
#define ES8156_REG13_RCH_DSM_SMUTE_MASK    (1 << ES8156_REG13_RCH_DSM_SMUTE_OFFSET)
#define ES8156_REG13_AM_MUTE_FLAG_OFFSET   (3)
#define ES8156_REG13_AM_MUTE_FLAG_MASK     (1 << ES8156_REG13_AM_MUTE_FLAG_OFFSET)
#define ES8156_REG13_AM_DSMMUTE_ENA_OFFSET (4)
#define ES8156_REG13_AM_DSMMUTE_ENA_MASK   (1 << ES8156_REG13_AM_DSMMUTE_ENA_OFFSET)
#define ES8156_REG13_AM_ACLKOFF_ENA_OFFSET (5)
#define ES8156_REG13_AM_ACLKOFF_ENA_MASK   (1 << ES8156_REG13_AM_ACLKOFF_ENA_OFFSET)
#define ES8156_REG13_AM_ATTENU6_ENA_OFFSET (6)
#define ES8156_REG13_AM_ATTENU6_ENA_MASK   (1 << ES8156_REG13_AM_ATTENU6_ENA_OFFSET)
#define ES8156_REG13_INTOUT_CLIPEN_OFFSET  (7)
#define ES8156_REG13_INTOUT_CLIPEN_MASK    (1 << ES8156_REG13_INTOUT_CLIPEN_OFFSET)

// Register 0x14 - Volume control
#define ES8156_REG14_DAC_VOLUME_DB_OFFSET (0)
#define ES8156_REG14_DAC_VOLUME_DB_MASK   (0xFF << ES8156_REG14_DAC_VOLUME_DB_OFFSET)

// Register 0x15 - ALC config 1
#define ES8156_REG15_DAC_ALC_EN_OFFSET    (0)
#define ES8156_REG15_DAC_ALC_EN_MASK      (1 << ES8156_REG15_DAC_ALC_EN_OFFSET)
#define ES8156_REG15_ALC_MUTE_GAIN_OFFSET (1)
#define ES8156_REG15_ALC_MUTE_GAIN_MASK   (7 << ES8156_REG15_ALC_MUTE_GAIN_OFFSET)

// Register 0x16 - ALC config 2
#define ES8156_REG16_ALC_WIN_SIZE_OFFSET  (0)
#define ES8156_REG16_ALC_WIN_SIZE_MASK    (0xF << ES8156_REG16_ALC_WIN_SIZE_OFFSET)
#define ES8156_REG16_ALC_RAMP_RATE_OFFSET (4)
#define ES8156_REG16_ALC_RAMP_RATE_MASK   (0xF << ES8156_REG16_ALC_RAMP_RATE_OFFSET)

// Register 0x17 - ALC level
#define ES8156_REG17_ALC_MINLEVEL_OFFSET (0)
#define ES8156_REG17_ALC_MINLEVEL_MASK   (0xF << ES8156_REG17_ALC_MINLEVEL_OFFSET)
#define ES8156_REG17_ALC_MAXLEVEL_OFFSET (4)
#define ES8156_REG17_ALC_MAXLEVEL_MASK   (0xF << ES8156_REG17_ALC_MAXLEVEL_OFFSET)

// Register 0x18 - Misc control 3
#define ES8156_REG18_DAC_RAM_CLR_OFFSET     (0)
#define ES8156_REG18_DAC_RAM_CLR_MASK       (1 << ES8156_REG18_DAC_RAM_CLR_OFFSET)
#define ES8156_REG18_DSM_DITHERON_OFFSET    (1)
#define ES8156_REG18_DSM_DITHERON_MASK      (1 << ES8156_REG18_DSM_DITHERON_OFFSET)
#define ES8156_REG18_RCH_INV_OFFSET         (2)
#define ES8156_REG18_RCH_INV_MASK           (1 << ES8156_REG18_RCH_INV_OFFSET)
#define ES8156_REG18_LCH_INV_OFFSET         (3)
#define ES8156_REG18_LCH_INV_MASK           (1 << ES8156_REG18_LCH_INV_OFFSET)
#define ES8156_REG18_CHN_CROSS_OFFSET       (4)
#define ES8156_REG18_CHN_CROSS_MASK         (3 << ES8156_REG18_CHN_CROSS_OFFSET)
#define ES8156_REG18_P2S_DPATH_SEL_OFFSET   (6)
#define ES8156_REG18_P2S_DPATH_SEL_MASK     (1 << ES8156_REG18_P2S_DPATH_SEL_OFFSET)
#define ES8156_REG18_P2S_DATA_BITNUM_OFFSET (7)
#define ES8156_REG18_P2S_DATA_BITNUM_MASK   (1 << ES8156_REG18_P2S_DATA_BITNUM_OFFSET)

// Register 0x19 - EQ control 1
#define ES8156_REG19_EQ_ON_OFFSET       (0)
#define ES8156_REG19_EQ_ON_MASK         (1 << ES8156_REG19_EQ_ON_OFFSET)
#define ES8156_REG19_EQ_CFG_WR_OFFSET   (1)
#define ES8156_REG19_EQ_CFG_WR_MASK     (1 << ES8156_REG19_EQ_CFG_WR_OFFSET)
#define ES8156_REG19_EQ_CFG_RD_OFFSET   (2)
#define ES8156_REG19_EQ_CFG_RD_MASK     (1 << ES8156_REG19_EQ_CFG_RD_OFFSET)
#define ES8156_REG19_EQ_RST_OFFSET      (3)
#define ES8156_REG19_EQ_RST_MASK        (1 << ES8156_REG19_EQ_RST_OFFSET)
#define ES8156_REG19_EQ_BAND_NUM_OFFSET (4)
#define ES8156_REG19_EQ_BAND_NUM_MASK   (7 << ES8156_REG19_EQ_BAND_NUM_OFFSET)

// Register 0x1A - EQ config 2
#define ES8156_REG1A_EQ_RUN_1STCNT_OFFSET (0)
#define ES8156_REG1A_EQ_RUN_1STCNT_MASK   (0x3F << ES8156_REG1A_EQ_RUN_1STCNT_OFFSET)
#define ES8156_REG1A_EQ_1STCNT_VLD_OFFSET (7)
#define ES8156_REG1A_EQ_1STCNT_VLD_MASK   (1 << ES8156_REG1A_EQ_1STCNT_VLD_OFFSET)

// Register 0x20 - Analog system
#define ES8156_REG20_S6_SEL_OFFSET (0)
#define ES8156_REG20_S6_SEL_MASK   (3 << ES8156_REG20_S6_SEL_OFFSET)
#define ES8156_REG20_S2_SEL_OFFSET (2)
#define ES8156_REG20_S2_SEL_MASK   (3 << ES8156_REG20_S2_SEL_OFFSET)
#define ES8156_REG20_S3_SEL_OFFSET (4)
#define ES8156_REG20_S3_SEL_MASK   (3 << ES8156_REG20_S3_SEL_OFFSET)

// Register 0x21 - Analog system
#define ES8156_REG21_VSEL_OFFSET        (0)
#define ES8156_REG21_VSEL_MASK          (0x1F << ES8156_REG21_VSEL_OFFSET)
#define ES8156_REG21_VREF_RMPDN1_OFFSET (5)
#define ES8156_REG21_VREF_RMPDN1_MASK   (1 << ES8156_REG21_VREF_RMPDN1_OFFSET)
#define ES8156_REG21_VREF_RMPDN2_OFFSET (6)
#define ES8156_REG21_VREF_RMPDN2_MASK   (1 << ES8156_REG21_VREF_RMPDN2_OFFSET)

// Register 0x22 - Analog system
#define ES8156_REG22_OUT_MUTE_OFFSET (0)
#define ES8156_REG22_OUT_MUTE_MASK   (1 << ES8156_REG22_OUT_MUTE_OFFSET)
#define ES8156_REG22_SWRMPSEL_OFFSET (1)
#define ES8156_REG22_SWRMPSEL_MASK   (1 << ES8156_REG22_SWRMPSEL_OFFSET)
#define ES8156_REG22_HPSW_OFFSET     (3)
#define ES8156_REG22_HPSW_MASK       (1 << ES8156_REG22_HPSW_OFFSET)

// Register 0x23 - Analog system
#define ES8156_REG23_HPCOM_REF1_OFFSET   (0)
#define ES8156_REG23_HPCOM_REF1_MASK     (1 << ES8156_REG23_HPCOM_REF1_OFFSET)
#define ES8156_REG23_HPCOM_REF2_OFFSET   (1)
#define ES8156_REG23_HPCOM_REF2_MASK     (1 << ES8156_REG23_HPCOM_REF2_OFFSET)
#define ES8156_REG23_VROI_OFFSET         (2)
#define ES8156_REG23_VROI_MASK           (1 << ES8156_REG23_VROI_OFFSET)
#define ES8156_REG23_DAC_IBIAS_SW_OFFSET (3)
#define ES8156_REG23_DAC_IBIAS_SW_MASK   (1 << ES8156_REG23_DAC_IBIAS_SW_OFFSET)
#define ES8156_REG23_VMIDLVL_OFFSET      (4)
#define ES8156_REG23_VMIDLVL_MASK        (3 << ES8156_REG23_VMIDLVL_OFFSET)
#define ES8156_REG23_IBIAS_SW_OFFSET     (6)
#define ES8156_REG23_IBIAS_SW_MASK       (3 << ES8156_REG23_IBIAS_SW_OFFSET)

// Register 0x24 - Analog system
#define ES8156_REG24_LPVREFBUF_OFFSET (0)
#define ES8156_REG24_LPVREFBUF_MASK   (1 << ES8156_REG24_LPVREFBUF_OFFSET)
#define ES8156_REG24_LPHPCOM_OFFSET   (1)
#define ES8156_REG24_LPHPCOM_MASK     (1 << ES8156_REG24_LPHPCOM_OFFSET)
#define ES8156_REG24_LPDACVRP_OFFSET  (2)
#define ES8156_REG24_LPDACVRP_MASK    (1 << ES8156_REG24_LPDACVRP_OFFSET)
#define ES8156_REG24_LPDAC_OFFSET     (3)
#define ES8156_REG24_LPDAC_MASK       (1 << ES8156_REG24_LPDAC_OFFSET)

// Register 0x25 - Analog system
#define ES8156_REG25_PDN_DAC_OFFSET        (0)
#define ES8156_REG25_PDN_DAC_MASK          (1 << ES8156_REG25_PDN_DAC_OFFSET)
#define ES8156_REG25_PDN_VREFBUF_OFFSET    (1)
#define ES8156_REG25_PDN_VREFBUF_MASK      (1 << ES8156_REG25_PDN_VREFBUF_OFFSET)
#define ES8156_REG25_PDN_DACVREFGEN_OFFSET (2)
#define ES8156_REG25_PDN_DACVREFGEN_MASK   (1 << ES8156_REG25_PDN_DACVREFGEN_OFFSET)
#define ES8156_REG25_ENHPCOM_OFFSET        (3)
#define ES8156_REG25_ENHPCOM_MASK          (1 << ES8156_REG25_ENHPCOM_OFFSET)
#define ES8156_REG25_VMIDSEL_OFFSET        (4)
#define ES8156_REG25_VMIDSEL_MASK          (3 << ES8156_REG25_VMIDSEL_OFFSET)
#define ES8156_REG25_ENREFR_OFFSET         (6)
#define ES8156_REG25_ENREFR_MASK           (1 << ES8156_REG25_ENREFR_OFFSET)
#define ES8156_REG25_PDN_ANA_OFFSET        (7)
#define ES8156_REG25_PDN_ANA_MASK          (1 << ES8156_REG25_PDN_ANA_OFFSET)

// Register 0x40 - 0x5E - EQ data RAM clear
#define ES8156_REG40_EQ_RAM_WDATA_OFFSET (0)
#define ES8156_REG40_EQ_RAM_WDATA_MASK   (0xFF << ES8156_REG40_EQ_RAM_WDATA_OFFSET)

// Register 0xFC - Page select
#define ES8156_REGFC_PAGE_SEL_OFFSET (0)
#define ES8156_REGFC_PAGE_SEL_MASK   (1 << ES8156_REGFC_PAGE_SEL_OFFSET)

// Register 0xFD - Chip ID1
#define ES8156_REGFD_CHIP_ID1_OFFSET (0)
#define ES8156_REGFD_CHIP_ID1_MASK   (0xFF << ES8156_REGFD_CHIP_ID1_OFFSET)

// Register 0xFE - Chip ID0
#define ES8156_REGFE_CHIP_ID0_OFFSET (0)
#define ES8156_REGFE_CHIP_ID0_MASK   (0xFF << ES8156_REGFE_CHIP_ID0_OFFSET)

// Register 0xFF - Chip version
#define ES8156_REGFF_CHIP_ID_VERSION_ID1_OFFSET (4)
#define ES8156_REGFF_CHIP_ID_VERSION_ID1_MASK   (0xF << ES8156_REGFF_CHIP_ID_VERSION_ID1_OFFSET)

// Register 0x00 - 0xD1 (page 1) - EQ coefficient
#define ES8156_PAGE1_REG00_EQ_COEF_OFFSET (0)
#define ES8156_PAGE1_REG00_EQ_COEF_MASK   (0xF << ES8156_PAGE1_REG00_EQ_COEF_OFFSET)
